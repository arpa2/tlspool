.TH TLSPOOL_PIN_SERVICE 3 "November 2015" "ARPA2.net" "Library Calls"
.SH NAME
tlspool_pin_service \- Offer PIN entry service to the TLS Pool
.SH SYNOPSIS
.B #include <tlspool/commands.h>
.br
.B #include <tlspool/starttls.h>
.sp
.B int tlspool_pin_service (char *\fIpath\fB,
.RS
.B uint32_t \fIregflags\fB, int \fIresponsetimeout_usec\fB,
.br
.B void (*\fIcb\fB) (pinentry_t *\fIentry\fB, void *\fIdata\fB),
.br
.B void *\fIdata\fB);
.RE
.SH DESCRIPTION
.PP
.BR tlspool_pin_service ()
registers with the TLS Pool for PIN entry callbacks.  This is used when
access to the
.I PKCS #11
backend requires a PIN \- usually to access a private or secret key.
The intention of
.BR tlspool_pin_service ()
is to permit front-end programs to present a popup for PIN entry.
.PP
The TLS Pool accepts at most one active PIN entry frontend at any time,
and will even protect a PIN entry frontend from being replaced while it
is in the process of entering a PIN.  The limit to this protection is
requested in
.IR responsetimeout_usec .
.PP
The callback function is called with the opaque
.I data
value supplied to
.B tlspool_pin_service
and a pointer to a
.B pinentry_t
structure that holds the usual
.I PKCS #11
identifiers (but terminated with a NUL character)
.BR token_manuf ", " token_model ", " token_serial " and " token_label .
In addition, there are specific fields for the TLS Pool named
.BR prompt ", " pin ", " attempt ", " timeout_us " and " flags .
The latter can be used as follows:
.TP
.B prompt
Can be shown to the user; it holds a string generated by the TLS Pool.
.TP
.B pin
Should be filled with the PIN entered, or an empty string.  The string
is assumed to be terminated with a NUL character.  The library code will
wipe this field as soon as it has been submitted to the TLS Pool.
.TP
.B timeout_us
Indicates the timeout, in microseconds, to be taken into account when
entering the requested PIN.
.TP
.B attempt
Is a counter that informs the user about the number of preceding authentication
failures for the currently requested PIN.  The value can be used to keep an eye
on lockout counters that are often implemented in a hardware token.
.TP
.B flags
Currently not used, but reserved for
.B PIOF_PINENTRY_xxx
flags.
.PP
The
.I regflags
parameter to
.BR tlspool_pin_service ()
is used for the initial registration to the PIN service, but in lieu of any
defined flags in the current version, this value should be set to 0.
.PP
The
.I path
parameter to
.BR tlspool_pin_service ()
points to the socket path for the TLS Pool; this function does not share
in the general resources setup through
.IR tlspool_socket (3)
because it is usually employed in isolated commands.  For this reason,
the function opens its own client socket, and will close it before
ending, even when the thread running it is victimised to
.IR pthread_cancel (3).
The
.I path
may be set to NULL, in which case the
.B TLSPOOL_DEFAULT_SOCKET_PATH
is used to connect to the TLS Pool.
.SH "RETURN VALUE"
As long as the function is successful, it does not return, but continue
to keep the TLS Pool locked into its PIN entry loop.  At some point however,
the routine may return with an error code in
.I errno
and the return value -1.
.\"TODO: .SH ERRORS
.\"TODO: Various.
.SH AUTHOR
.PP
Written by Rick van Rein of OpenFortress.nl, for the ARPA2.net project.
.SH "REPORTING BUGS"
.PP
For any discussion, including about bugs, please use the mailing list
found on
.IR http://lists.arpa2.org/mailman/listinfo/tls-pool .
.PP
Please read the software distribution's
.IR README ", " INSTALL " and " TODO " files"
for information about the
.I tlspool-daemon
implementation status.
.SH COPYRIGHT
.PP
Copyright \(co 2015 Rick van Rein, ARPA2.net.
.PP
ARPA2 is funded from InternetWide.org, which in turns receives donations
from various funding sources with an interest in a private and secure
Internet that gives users control over their online presence.  This particular
project has been sponsored in part by NCSC.
.SH "SEE ALSO"
.IR tlspool-daemon "(8), " pthread_cancel "(3), " tlspool_localid_service "(3)"
.PP
The configuration file option
.I socket_name
influences the path at which the TLS Pool is available; this is not
read by the client library, and when it differs from the default path in
.BR TLSPOOL_DEFAULT_SOCKET_PATH ,
this function is used to inform the client library once, before calling
any of the other client functions.
In the same file,
.I pkcs11_pin
can be setup with a fixed PIN, as an alternative to the use of this function.
.PP
The TLS Pool API is documented in the include file
.IR <tlspool/commands.h> " and " <tlspool/starttls.h>
for C, and the
.I tlspool.py
module for Python.
.PP
Online resources may be found on the project home page,
.IR http://tlspool.arpa2.net .
